9カテゴリ作っているので，各カテゴリ1分ぐらいで作ってください．
長いのを短くするのは簡単ですが，短いのを長くするのは大変なので長めに作ってください．

匿名化フェーズ

・予想有用性指標：
	・各属性での出現個数の匿名化前後の差分
	・ユークリッド距離
	・カルバックライブラーダイバージェンス
	・何らかの分類器を使った分類結果の正答率

・自チームのデータ分布の特徴について
	データ分布の偏りが強い部分を軽く説明．（最近の連絡日の12月とかキャンペーン連絡回数の7以上の値とか）
	→データ分布に偏りが強かったり，出現数が小さい値がそのまま残っていると攻撃されやすい．（例：前回キャンペーン連絡からの経過日数）

・匿名化方法：
	・年齢
		ラプラス→一般化（10歳ごと）→年代内でランダムに
	・地域
		静岡，神奈川を書き換え→RR
	・趣味
		ゲーム，旅行を取り除く or 書き換え→RR
	・職業
		学生・起業家・自営業・失業中・家政婦を書き換え→RR
	・結婚
		離婚または死別を書き換え→RRまたは単にRR
	・最終学歴
		不明を書き換え→RR
	・債務不履行
		ありをなしに書き換え
	・残高
		強めラプラス→一般化(std/2ごと)→階級内でランダムに
	・住宅ローン
		RR
	・個人ローン
		RR
	・連絡手段
		固定電話を書き換え→RR
	・最近の連絡日（日）
		RR（強め？）
	・最近の連絡日（月）
		１，12月を書き換え→RR
	・通話時間（秒）
		ラプラス→1445以上のデータを書き換え
	・キャンペーン連絡回数
		13以上のデータを書き換え→RR
		またはラプラス→0以下または9以上のデータをそれ未満に書き換え
	・前回のキャンペーン連絡からの経過日数
		全ての値を-1に書き換え→ランダムに取得した19個分のレコードに対し，ラプラス分布に従う変数の絶対値の整数部分を加える．
	・キャンペーン前の連絡回数
		全ての値を0に書き換え→ランダムに取得した19個分のレコードに対し，ラプラス分布に従う変数の絶対値の整数部分を加える．
	・前回キャンペーンの成果
		全ての値を0に書き換え，{成功：-1，失敗：0，その他：1}と対応付ける．→ランダムに取得した19個分のレコードに対し，正規分布に従う変数の整数部分を加える．
	・新キャンペーンの成果
		RR

・匿名化データ評価：
	「予想有用性指標」のうち，「各属性での出現個数の匿名化前後の差分」を用い評価を行った．
	「年齢」「残高」「通話時間」は30以下に，残りは20以下にしつつ，epsilonの和は小さくなるようにepsilonを設定した．
	結果はこんなのでしたということを言う：{eps_list，teamB_noised，utility}_candidate2.csvを参照．


攻撃フェーズ
・攻撃方法：
	時間が足りず独自の方法の実装はできなかった．
	サンプルコードに全属性を選択し，攻撃．攻撃結果の匿名化レコードと攻撃対象レコードの各属性に対し，一致している割合が多いものを選択し，最終的な攻撃とした．

・改善案：
	・最初に全属性を選択して攻撃するとそれぞれの属性が邪魔をし，本当はノイズがあまりかかっていない（=攻撃しやすい）属性であるにもかかわらず，そうではないように見えてしまう可能性がある．
	　属性を数個選び，組み合わせを変えながら複数回攻撃．匿名化データの各レコードに対応する攻撃データのレコードを多数決で決定．
	・サンプルコードのレコード間の「距離」の計算は，順序付きの値ならば最大限離れてやっと1をとるが，カテゴリデータは異なっているだけで1をとる．
	　単に和をとるのではなく，距離を[category, continuous]の二次元に分け，catとconのどちらを優先して距離を計算するか決定する．

・攻撃結果：
	・黒田さんのteamX_comoparison.csvを使い，各チームの攻撃結果がどうだったか簡単にまとめる．

・攻撃結果（自チーム）：
	「攻撃方法」を用いて攻撃すると，ものすごく攻撃が成功してしまった．
	→匿名化した際に攻撃耐性を調べなかったことが原因．

まとめ
	匿名化は，利用する有用性指標を定め，データの偏りをなくしつつ有用性を保てるように行った．
	攻撃は，「攻撃しやすい属性」をはじめに見極め，それらの属性だけを用いて攻撃を行うことで有効な攻撃を行おうとした．