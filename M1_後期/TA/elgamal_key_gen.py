# -*- coding: utf-8 -*-
"""
Created on Mon Dec 25 22:33:07 2023

@author: laplacian
"""
import random
import binascii

def mod_binary(g,k,n):
    bk=bin(k)[2:]
    y=1
    for i in bk:
        y=(y**2)%n
        if i=='1':
            y=(y*g%n)
    return y

def elgamal_key_gen(p,g,l):
    x = random.randint(2, l-1)
    y = pow(g, x, p)
    return x, y

def elgamal_decrypt(u, c, x, p):
    return (c * pow(u,-x,p))%p

def elgamal_enc(m, g, p,r, pk):
    u=mod_binary(g,r,p)
    c=mod_binary(pk,r,p)*m%p
    return u,c

def main():
    p4=141108755332974711606815218263958123381184588212061018448136404826965889433079453789166218230378522228564058127860367190611065605375025546257531489369344062782521806978218808940091447658298351853603237069980597505163602473095615670998464391197300372933147772009493823037167642459378452731092557170909406945309
    g4=79207621787760038235763239269746451281552097558625763440050213854787240633084667257397421010854631623596917364929357681934505810865796708268321894884518347711092708958596829555918931536779252059763083320084867242870421484137196365244257388686997557137455046446997809953054632950185678637137955632299024284915
    l4=1362115923099293242369922261305212343561846087883
    x = 499409335409697408987575198885348784872975834558
    # x, y = elgamal_key_gen(p4, g4, l4)
    #------------------------------------------------------------
    # #落合さんの暗号文
    # y = 4871199422067813171209677566953861867454773780905351679991649716941772302590688051108248972155909998986647333501760813474583209908932385948293197768929434885609235567279710191130354488527749670435715346936609566226140966450454452910521674657379732391916906511648876590133261600211277639516280970780972283020
    # # u = 1363808330698149239544835062287340367964290271461941596678126312354987971893999754816126167000860796644450549359642698944046472337842217652254316490529730333744436220453816538286171824432231291826033754798476109749048209131674858725237000742469868855972120446274563247542084169537026431581380584720197069919
    # # c = 17355299615495477690775753346248588271744165876731062413020443230352633385537606704231155760918654349792488946752530708181028040587277228115737228197033180877721900753566510483271704211796338164392916253134186123918477825066462699606129154942412136929631554400552613237338601418194337091517913585787144237361
    # u = 1363808330698149239544835062287340367964290271461941596678126312354987971893999754816126167000860796644450549359642698944046472337842217652254316490529730333744436220453816538286171824432231291826033754798476109749048209131674858725237000742469868855972120446274563247542084169537026431581380584720197069919
    # c = 39809678887802790800337446820995683245851732954092178056885086706417473854839552961010006084662862542770508921386949133154306035366872228101729839709856550856772992407923575157859125524451315081674064653200384570493343270446240587073193071156401395269239996617894317962357375355690039956275594366817919258727

    #加藤さんの暗号文 ファミールのだいがくいも
    # y = 36095150696651415755779678069274339081008443590629226110736113086078426574681235205792880746646173817334895538968881682570769086466088677070095491610634197953236293832653612220223016107919479474753084624089878231549324053786564652305735865539587045135066168095941520502115403885102149117035184408717655820396
    # u = 1363808330698149239544835062287340367964290271461941596678126312354987971893999754816126167000860796644450549359642698944046472337842217652254316490529730333744436220453816538286171824432231291826033754798476109749048209131674858725237000742469868855972120446274563247542084169537026431581380584720197069919
    # c = 71538152665527227474608606173383030681784324852611385080559478062626966741835285656642801641674389928154867595882541622046241166261332962908868796455567060728392508468474752172652458450224477670123177485045744088551914440719881311660522088840167181770390810277853656894913976454095965867115686941204424006357

    # # #栗原さんの暗号文
    # y = 115565711267556409659427752648241136037730917997418872080629879081789707017091955290737255867632876390887889441134892851270336817971113299311047446852405053406925994605491709563592066128446059296788134072546763954518150356576968100202984472771615900716022906570865139182525000238420263206615394502007872766519
    # # u = int("0xa13196181e06c120bf08e763542f1dcf428d7b112ad7aeef647662b4ae21f842c41cef71fc404d407dab39f3d0a2e2f8fe47adff8ba0bc8e329f49f08922bb933ee3d8a089e8a772f418ba68c923fbc888c61d3c23f6590bdb5b585c23adcbeae5c181bcccdf4c69753b6e00b9161a54aa5fd4dd21d9623c20a9ca469c0b5b99", 16)
    # # c = int("0x3855264da4c7bd9d9f49b4d496acc5bbc90f7a4bfd392acd0fcbdec5ee76c6f7264fdf4b58441e0d2e81c29cd6ce104785eb479b8a5379092c094dbcaf2e9514b997265bd55d29fb5a954542fc35caed04e2e049a98ac5181209726ef729e73b0394767c231b4969777158e0af7ba16a961fd6aa9dcefc674a2b1533e2dc7c4f", 16)
    # u = 46798339561433832935135934856237818811053339540422402218588497317744618192747278707315776921509155893684871543993679987074048465061538729935088728174355069938853960755226700820592417217947034228807571036221149546983332619588459271412793653998751827153417716914634416130520414484152030864523699425501829999687
    # c = 82654513863895675223363984723755715200949731200749638284473097105551878483390978870317624110440155090662927544566197247451104741054103353208222901963271028430349330629333702366235707096545539616817566474306769780026504182447490881560573651851908941608563169204470691259822205227088730050068618015126469999652
    #------------------------------------------------------------
    #復号
    # m = elgamal_decrypt(u,c,x,p4)
    # print(m)
    #------------------------------------------------------------
    #暗号化
    # r = 123456789123456789123456789123456789123456789123
    # m = "食べたことがある"
    # m = int(binascii.hexlify(m.encode("utf-8")),16)

    # u,c = elgamal_enc(m,g4,p4,r,y)
    # print("u=",u)
    # print("c=",c)

    #------------------------------------------------------------
    # 数値を文字列に変換
    # m_byte = m.to_bytes(32, byteorder="big")
    # m = m_byte.decode("utf-8")
    # print(m)
    
    # mh = hex(m)[2:].encode("utf-8")
    # M = binascii.unhexlify(mh).decode("utf-8")
    # print(M)
    #------------------------------------------------------------
    # #対抗課題２
    # #暗号文１
    # (u1, c1)=[128669955054666863796321036252115948123616602487855829629135995679996479380827668605773944515751444470667025420699765484479411322824186532678599051907362415785013181920442756847433014142372596722720429038238186880455475126459492960571869406117389734613181861704026334112878913201032638258252671904887267176358, 122041324874382854121709412259768078155004960111905890536143929101954414359760660861850638917211019533792210731066216543265179085531158070239095322148161436727625549814258345826019845133728678660956785949603705340811645816149805304594303830772626241422905544519631664566153899660323535275444374682820557380705]
    # #暗号文２
    # (u2, c2)=[128669955054666863796321036252115948123616602487855829629135995679996479380827668605773944515751444470667025420699765484479411322824186532678599051907362415785013181920442756847433014142372596722720429038238186880455475126459492960571869406117389734613181861704026334112878913201032638258252671904887267176358, 133993369657320455992295756317004962686323756583148918748724372304598377117739775653435678930823618726894294808675331724090842807307396868869793339098671336416868469372058742796559814694167921719181422305735197551016661245954291732843887120671771915915416062209200280723991086775949455983100925712151096950308]
    # #暗号文３
    # (u3, c3)=[128669955054666863796321036252115948123616602487855829629135995679996479380827668605773944515751444470667025420699765484479411322824186532678599051907362415785013181920442756847433014142372596722720429038238186880455475126459492960571869406117389734613181861704026334112878913201032638258252671904887267176358, 42053390054887009595450052893280599629192038498838214782312598664267226837206329030784910353896558308425832721077849710439220345063164192062420771205816587500260728734845409487240463969586637488975975842431560794454588294189755054522521718616233843088269937377097971555374415695885829159524484774440970328303]
    # #暗号文４
    # (u4, c4)=[128669955054666863796321036252115948123616602487855829629135995679996479380827668605773944515751444470667025420699765484479411322824186532678599051907362415785013181920442756847433014142372596722720429038238186880455475126459492960571869406117389734613181861704026334112878913201032638258252671904887267176358, 94470360702307691352446334924479346978593288885440868122488553301969120447834904552927770940740051165558689649705889801093360158126362011751176172571743731585446813731768702989757253752496359274493379785314928560702942068015107286454600484488347683362741939446369579838770719545168370811894726014574507369694]

    # m1 = elgamal_decrypt(u1,c1,x,p4)
    # m2 = elgamal_decrypt(u2,c2,x,p4)
    # m3 = elgamal_decrypt(u3,c3,x,p4)
    # m4 = elgamal_decrypt(u4,c4,x,p4)
    # print("m1=",m1)
    # print("m2=",m2)
    # print("m3=",m3)
    # print("m4=",m4)
    


    # u1,c1 = elgamal_enc(m1,g4,p4,random.randint(1,l4),y)
    # u2,c2 = elgamal_enc(m2,g4,p4,random.randint(1,l4),y)
    # u3,c3 = elgamal_enc(m3,g4,p4,random.randint(1,l4),y)
    # u4,c4 = elgamal_enc(m4,g4,p4,random.randint(1,l4),y)
    # print("u1=\n",u1)
    # print("c1=\n",c1)
    # print("u2=\n",u2)
    # print("c2=\n",c2)
    # print("u3=\n",u3)
    # print("c3=\n",c3)
    # print("u4=\n",u4)
    # print("c4=\n",c4)

    #------------------------------------------------------------
    # #対抗課題３
    yB1 = 4871199422067813171209677566953861867454773780905351679991649716941772302590688051108248972155909998986647333501760813474583209908932385948293197768929434885609235567279710191130354488527749670435715346936609566226140966450454452910521674657379732391916906511648876590133261600211277639516280970780972283020
    yB2 = 36095150696651415755779678069274339081008443590629226110736113086078426574681235205792880746646173817334895538968881682570769086466088677070095491610634197953236293832653612220223016107919479474753084624089878231549324053786564652305735865539587045135066168095941520502115403885102149117035184408717655820396
    yB3 = 115565711267556409659427752648241136037730917997418872080629879081789707017091955290737255867632876390887889441134892851270336817971113299311047446852405053406925994605491709563592066128446059296788134072546763954518150356576968100202984472771615900716022906570865139182525000238420263206615394502007872766519
    y = yB1*yB2*yB3%p4

    m1 = "セキュリティの応用にトレーサビリティがあります．"
    m2 = "自動車の部品が正しい工場で作られたことを保証します．"
    m3 = "だ円暗号がブロックチェーンに利用されます．"
    m1 = int(binascii.hexlify(m1.encode("utf-8")),16)
    m2 = int(binascii.hexlify(m2.encode("utf-8")),16)
    m3 = int(binascii.hexlify(m3.encode("utf-8")),16)

    u,c = elgamal_enc(m1,g4,p4,random.randint(1,l4),y)
    print("u1=",u)
    print("c1=",c)

    u,c = elgamal_enc(m2,g4,p4,random.randint(1,l4),y)
    print("u2=",u)
    print("c2=",c)

    u,c = elgamal_enc(m3,g4,p4,random.randint(1,l4),y)
    print("u3=",u)
    print("c3=",c)
if __name__=="__main__":
    main()